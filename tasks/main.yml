---
# tasks file for waal70.vaultwarden
# This include_vars allows you to keep your vaulted variables outside of your main repo
# It assumes the PRIVATE_REPO environment variable is set to the path of your private repo
# On home-infra, this is done by firstrun.sh.
# However, this role will not break if you do not have these
- name: Include vaulted password file
  ansible.builtin.include_vars:
    file: "{{ item }}"
  with_first_found:
    - files:
        - "{{ lookup('env', 'PRIVATE_REPO') | default('~') }}/ansible-vault/{{ ansible_role_name }}-vars.yml"
      skip: true

- name: "Template the vaultwarden.yml file to the role's files/ directory"
  ansible.builtin.template:
    src: vaultwarden.yml.j2
    dest: "{{ role_path }}/files/vaultwarden.yml"
    owner: "{{ interactive_user }}"
    group: "{{ interactive_user }}"
    mode: '0644'
    force: true
  delegate_to: localhost

# As vaultwarden requires SSL, we also deploy nginx-pm
- name: "Include role to deploy paperless-ngx-stack to Portainer"
  ansible.builtin.include_role:
    name: waal70.portainer
  vars:
    stack_list:
      - name: vaultwarden
        file: vaultwarden.yml # file is in files/ of this role
      - name: nginx-pm
        file: nginx.yml

# To generate the hash for ADMIN_TOKEN, use the following command:
# echo -n "secretpassword" | argon2 "$(openssl rand -base64 32)" -e -id -k 19456 -t 2 -p 1

- name: "Return the vaultwarden yaml back to its placeholder version"
  ansible.builtin.copy:
    src: vaultwarden.yml.placeholder
    dest: "{{ role_path }}/files/vaultwarden.yml"
    owner: "{{ interactive_user }}"
    group: "{{ interactive_user }}"
    mode: '0644'
    remote_src: false
    force: true
  delegate_to: localhost

- name: "Set fact for user to run docker exec under"
  ansible.builtin.set_fact:
    docker_exec_user: "{{ ansible_env.SUDO_USER | default(ansible_env.USER, true) | default(ansible_user_id, true) }}"

- name: "Schedule a regular export in cron"
  ansible.builtin.cron:
    name: "vaultwarden db-export"
    weekday: "5"
    minute: "25"
    hour: "22"
    user: "{{ docker_exec_user }}"
    job: "/usr/bin/docker exec -t vaultwarden /vaultwarden backup >> /home/{{ docker_exec_user }}/crontab.log 2>&1"
    state: "present"
